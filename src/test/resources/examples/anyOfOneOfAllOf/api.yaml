openapi: 3.0.0
components:
  schemas:
    ComplexParent:
      allOf:
        - $ref: '#/components/schemas/ContainsNestedOneOf'
        - $ref: '#/components/schemas/ContainsNestedAnyOf'
        - type: object
          properties:
            top_level_prop:
              type: number

    ContainsNestedOneOf:
      oneOf:
        - $ref: "#/components/schemas/FirstOneA"
        - $ref: "#/components/schemas/ComplexSecondOneA"

    ContainsNestedAnyOf:
      anyOf:
        - $ref: "#/components/schemas/FirstAnyA"
        - $ref: "#/components/schemas/SecondAnyA"

    FirstOneA:
      type: object
      properties:
        first_nested_one_of_prop:
          type: string

    ComplexSecondOneA:
      allOf:
        - $ref: '#/components/schemas/MoreNesting'

    MoreNesting:
      type: object
      properties:
        more_nested_prop_one:
          type: string

    FirstAnyA:
      type: object
      properties:
        first_nested_any_of_prop:
          type: string

    SecondAnyA:
      type: object
      properties:
        second_nested_any_of_prop:
          type: string
          
    OneOfAndTopLevelProps:
      type: object
      required:
        - forth_property
        - fifth_property
      properties:
        forth_property:
          type: string
        fifth_property:
          type: string
          format: date-time
      oneOf:
        - $ref: "#/components/schemas/FirstOneB"
        - $ref: "#/components/schemas/SecondOneB"

    FirstOneB:
      type: object
      properties:
        first_property:
          type: string

    SecondOneB:
      type: object
      properties:
        second_property:
          type: string
        third_property:
          type: string          